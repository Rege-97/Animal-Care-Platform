<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.animal.api.management.shelter.mapper.ManagementShelterMapper">

<select id="getShelterInfo" parameterType="int" resultType="com.animal.api.management.shelter.model.response.AllManageShelterResponseDTO">
SELECT 
	S.USER_IDX AS idx,
	S.SHELTER_NAME AS shelterName,
	ST.NAME AS type,
	S.SHELTER_PERSON_NAME AS personName,
	S.SHELTER_TEL AS tel,
	S.SHELTER_EMAIL AS email,
	S.SHELTER_ZIP_CODE AS zipCode,
	S.SHELTER_ADDRESS AS address,
	S.SHELTER_ADDRESS_DETAIL AS addressDetail,
	S.SHELTER_BUSINESS_NUMBER AS businessNumber,
	S.SHELTER_DESCRIPTION AS description,
	S.SHELTER_BUSINESS_FILE as businessFile
FROM
	SHELTERS S
LEFT JOIN
    SHELTER_TYPES ST ON
	S.SHELTER_TYPE_IDX = ST.IDX
WHERE
    S.USER_IDX = #{idx};
</select>

<update id="updateSheterInfo" parameterType="com.animal.api.management.shelter.model.request.ShelterInfoUpdateRequestDTO">
UPDATE SHELTERS
SET
    SHELTER_NAME = #{shelterName},
    SHELTER_PERSON_NAME = #{personName},
    SHELTER_TEL = #{tel},
    SHELTER_EMAIL = #{email},
    SHELTER_ZIP_CODE = #{zipCode},
    SHELTER_ADDRESS = #{address},
    SHELTER_ADDRESS_DETAIL = #{addressDetail},
    SHELTER_BUSINESS_NUMBER = #{businessNumber},
    SHELTER_BUSINESS_FILE = #{businessFile},
    SHELTER_DESCRIPTION = #{description}
WHERE
    USER_IDX = #{idx};
</update>

<select id="getVolunteerReview" parameterType="int" resultType="com.animal.api.management.shelter.model.response.ManageVolunteerReviewResponseDTO">
SELECT
	VR.IDX AS reviewIdx, 
	VR.USER_IDX AS userIdx, 
	V.USER_IDX AS shelterIdx,
	V.IDX AS volunteerIdx,
	V.TITLE AS volunteerTitle,
	S.SHELTER_NAME AS shelterName,
	REVIEWER.NICKNAME,
	VR.CONTENT,
	VR.CREATED_AT AS createdAt,
	VR.REF,
	VR.LEV,
	VR.TURN
FROM
	VOLUNTEERS V
JOIN VOLUNTEER_REVIEWS VR ON
	VR.VOLUNTEER_IDX = V.IDX
JOIN USERS REVIEWER ON
	VR.USER_IDX = REVIEWER.IDX
JOIN SHELTERS S ON
	S.USER_IDX = V.USER_IDX
WHERE
	V.USER_IDX = #{idx}
ORDER BY
	VR.REF DESC,
	VR.TURN ASC
LIMIT
#{listSize} OFFSET #{cp}
</select>

<select id="getAdoptionReview" parameterType="int" resultType="com.animal.api.management.shelter.model.response.ManageAdoptionReviewResponseDTO">
SELECT
	AR.IDX AS reviewIdx,
	AR.CONTENT AS content,
	U.NICKNAME,
	A.NAME AS animalName,
	AR.CONTENT,
	AR.CREATED_AT AS createdAt,
	AR.REF,
	AR.TURN
FROM
	ADOPTION_REVIEWS AR
JOIN ANIMALS A ON
	AR.ANIMAL_IDX = A.IDX
JOIN USERS U ON
	AR.ANIMAL_IDX = U.IDX
WHERE
	A.USER_IDX = #{idx}
ORDER BY
	AR.REF DESC,
	AR.TURN ASC
LIMIT
#{listSize} OFFSET #{cp};
</select>

<update id="updateTurn" parameterType="map">
UPDATE
	VOLUNTEER_REVIEWS
SET
	TURN = TURN + 1
WHERE
	REF = #{ref}
	AND TURN >= #{turn};
</update>

<insert id="addVolunterReviewApply" parameterType="com.animal.api.management.shelter.model.request.ManageVolunteerReplyRequestDTO">
INSERT
	INTO
	VOLUNTEER_REVIEWS(
USER_IDX,
VOLUNTEER_IDX,
CONTENT,
REF,
LEV,
TURN
)
VALUES (
#{userIdx},
#{volunteerIdx},
#{content},
#{ref},
#{lev},
#{turn}
);
</insert>
 
 </mapper>